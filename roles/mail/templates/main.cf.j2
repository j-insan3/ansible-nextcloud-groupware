###################################################################################################
### Base Settings ###
#####################

# Listen on all interfaces
inet_interfaces = all

# Use TCP IPv4
inet_protocols = all

# Greet connecting clients with this banner
smtpd_banner = $myhostname ESMTP $mail_name

# Fully-qualified hostname
myhostname = {{ FQDN_mailserver }}

# Do not append domain part to incomplete addresses (this is the MUA's job)
append_dot_mydomain = no

# Trusted networks/hosts (these are allowed to relay without authentication)
mynetworks =
    # Local
    127.0.0.0/8
    {{ allowed_network }}

# limit maximum e-mail size to 50MB. mailbox size must be at least as big as
# the message size for the mail to be accepted, but has no meaning after
# that since we are using Dovecot for delivery.
message_size_limit = 51200000
mailbox_size_limit = 51200000

###################################################################################################
### Local Transport ###
#######################

# Disable local transport (so that system accounts can't receive mail)
local_transport = error:Local Transport Disabled

# Don't use local alias maps
alias_maps =

# Local domain (could be omitted, since it is automatically derived from $myhostname)
# mydomain = example.com

# Mails for these domains will be transported locally
mydestination =
    $myhostname
    localhost.$mydomain
    localhost

# allow +
recipient_delimiter = +

###################################################################################################
### Virtual Transport ###
#########################

# Deliver mail for virtual recipients to Dovecot
virtual_transport = lmtp:unix:/var/spool/postfix/private/dovecot-lmtp

# Process one mail at one time
# dovecot_destination_recipient_limit = 1

# Valid virtual domains
virtual_mailbox_domains = proxy:ldap:/etc/postfix/ldap_virtual_domains.cf

# Valid virtual recipients
virtual_mailbox_maps = proxy:ldap:/etc/postfix/ldap_virtual_recipients.cf

# Virtual aliases
virtual_alias_maps = proxy:ldap:/etc/postfix/ldap_virtual_aliases.cf


###################################################################################################
### ESMTP Settings ###
######################

### SASL ###

# Enable SASL (required for SMTP authentication)
smtpd_sasl_auth_enable = yes
smtpd_sasl_type = dovecot
smtpd_sasl_path = /var/spool/postfix/private/auth
# don't allow plaintext auth methods on unencrypted connections
smtpd_sasl_security_options = noanonymous, noplaintext
# but plaintext auth is fine when using TLS
smtpd_sasl_tls_security_options = noanonymous

# Enable SASL for Outlook-Clients as well
#broken_sasl_auth_clients = yes

### TLS ###

# Enable TLS (required to encrypt the plaintext SASL authentication)
smtpd_tls_security_level = may

smtp_tls_note_starttls_offer = yes

{% if use_dane | default(False) %}
smtp_dns_support_level=dnssec
smtp_tls_security_level=dane

{% else %}
smtp_tls_security_level = may

{% endif %}

# Only offer SASL in a TLS session
smtpd_tls_auth_only = yes

{% if mailserver_cert is defined %}

# Certification Authority
# smtpd_tls_CAfile = /etc/pki/CA/certs/

# Public Certificate
smtpd_tls_cert_file = /etc/pki/dovecot/certs/{{ mailserver_cert }}

# Private Key (without passphrase)
smtpd_tls_key_file = /etc/pki/dovecot/private/{{ mailserver_key }}


{% else %}

# Certification Authority
#smtpd_tls_CAfile = /etc/postfix/certs/example-cacert.pem

# Public Certificate
smtpd_tls_cert_file = /etc/pki/dovecot/certs/dovecot.pem

# Private Key (without passphrase)
smtpd_tls_key_file = /etc/pki/dovecot/private/dovecot.pem

{% endif %}

# Randomizer for key creation
tls_random_source = dev:/dev/urandom

# TLS related logging (set to 2 for debugging)
smtpd_tls_loglevel = 0

# Avoid Denial-Of-Service-Attacks
smtpd_client_new_tls_session_rate_limit = 10

# Activate TLS Session Cache
smtpd_tls_session_cache_database = btree:${data_directory}/smtpd_tlscache
smtp_tls_session_cache_database  = btree:${data_directory}/smtp_tlscache

# add a message header when email was recieved over TLS
smtpd_tls_received_header = yes

# Deny some TLS-Ciphers
smtpd_tls_mandatory_protocols=!SSLv2,!SSLv3
smtp_tls_mandatory_protocols=!SSLv2,!SSLv3
smtpd_tls_protocols=!SSLv2,!SSLv3
smtp_tls_protocols=!SSLv2,!SSLv3

smtp_tls_mandatory_ciphers=high
smtpd_tls_exclude_ciphers =
        EXP
        EDH-RSA-DES-CBC-SHA
        ADH-DES-CBC-SHA
        DES-CBC-SHA
        SEED-SHA
	DES-CBC3-SHA
	EDH-RSA-DES-CBC3-SHA
	RC4
	IDEA-CBC-SHA
        ADH-AES256-GCM-SHA384
        ADH-AES256-GCM-SHA384
        ADH-AES256-SHA256
        ADH-AES256-SHA
        ADH-CAMELLIA256-SHA
        ADH-AES128-GCM-SHA256
        ADH-AES128-SHA
        ADH-AES128-SHA256
        ADH-SEED-SHA
        ADH-CAMELLIA128-SHA
        ADH-DES-CBC3-SHA
        ADH-DES-CBC-SHA
        ADH-RC4-MD5
        AECDH-AES128-SHA
        AECDH-AES256-SHA
        AECDH-DES-CBC3-SHA


# Diffie-Hellman Parameters for Perfect Forward Secrecy
smtpd_tls_dh512_param_file  = /etc/ssl/dh512.pem
smtpd_tls_dh1024_param_file = /etc/ssl/dh2048.pem

smtpd_tls_eecdh_grade = strong


###################################################################################################
### Connection Policies ###
###########################

# Reject Early Talkers
postscreen_greet_action = enforce

# set spf timeout
#policy-spf_time_limit = 3600s

# Use amavis for virus and spam scanning
#content_filter = smtp-amavis:[127.0.0.1]:10024


###################################################################################################
### Session Policies ###
########################

# Recipient Restrictions (RCPT TO related)
smtpd_recipient_restrictions =
  permit_mynetworks,
  permit_sasl_authenticated,
  reject_non_fqdn_recipient,
  reject_unknown_recipient_domain,
  reject_unauth_pipelining,
  reject_unverified_recipient

# Relay restrictions
smtpd_relay_restrictions =
  permit_mynetworks,
  permit_sasl_authenticated,
  # !!! THIS SETTING PREVENTS YOU FROM BEING AN OPEN RELAY !!!
  reject_unauth_destination
  # !!!      DO NOT REMOVE IT UNDER ANY CIRCUMSTANCES      !!!


# Data restrictions
smtpd_data_restrictions =
  permit_mynetworks,
  permit_sasl_authenticated,
  reject_multi_recipient_bounce,
  reject_unauth_pipelining

# Sender Restrictions
smtpd_sender_restrictions =
  permit_mynetworks,
  permit_sasl_authenticated,
  reject_non_fqdn_sender,
  reject_unknown_sender_domain,
  reject_unauth_pipelining

# HELO/EHLO Restrictions
smtpd_helo_restrictions =
  permit_mynetworks,
  permit_sasl_authenticated,
  reject_invalid_helo_hostname,
  reject_non_fqdn_helo_hostname,
  # you might want to consider:
  #  reject_unknown_helo_hostname,
  # here. This will reject all incoming mail without a HELO hostname that
  # properly resolves in DNS. This is a somewhat restrictive check and may
  # reject legitimate mail.
  reject_unauth_pipelining

# Deny VRFY recipient checks
disable_vrfy_command = yes

# require properly formatted email addresses - prevents a lot of spam
strict_rfc821_envelopes = yes

# don't give any helpful info when a mailbox doesn't exist
show_user_unknown_table_name = no

# require addresses of the form "user@domain.tld"
allow_percent_hack = no
swap_bangpath = no

# Require HELO
smtpd_helo_required = yes

# Waste Spammers time ( and log a bit more)
smtpd_delay_reject = yes

# Client Restrictions
smtpd_client_restrictions =
  permit_mynetworks,
  permit_sasl_authenticated,
  reject_unknown_reverse_client_hostname,
  # you might want to consider:
  #  reject_unknown_client_hostname,
  # here. This will reject all incoming connections without a reverse DNS
  # entry that resolves back to the client's IP address. This is a very
  # restrictive check and may reject legitimate mail.
  reject_unauth_pipelining

# We'll uncomment these when we set up rspamd later:
# milter_protocol = 6
# milter_default_action = accept
# smtpd_milters = unix:/var/run/rspamd/milter.sock
# milter_mail_macros = i {mail_addr} {client_addr} {client_name} {auth_authen}
